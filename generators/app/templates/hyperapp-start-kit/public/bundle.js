!function(e,n){e.getElementById("livereloadscript")||((n=e.createElement("script")).async=1,n.src="//"+(window.location.host||"localhost").split(":")[0]+":35729/livereload.js?snipver=1",n.id="livereloadscript",e.head.appendChild(n))}(window.document),function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n(((e=e||self).bundle=e.bundle||{},e.bundle.js={}))}(this,function(e){"use strict";function t(e,n){for(var t=[],r=[],o=arguments.length;2<o--;)t.push(arguments[o]);for(;t.length;){var i=t.pop();if(i&&i.pop)for(o=i.length;o--;)t.push(i[o]);else null!=i&&!0!==i&&!1!==i&&r.push(i)}return"function"==typeof e?e(n||{},r):{nodeName:e,attributes:n||{},children:r,key:n&&n.key}}!function(e,n){void 0===n&&(n={});var t=n.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===t&&r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}(".app{width:100px;height:100px;background-color:#dcdcdc}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUNJLFdBQVcsQ0FDWCxZQUFhLENBQ2Isd0JBQTJCIiwiZmlsZSI6ImFwcC5zY3NzIn0= */");var n,r,o,i,l,u,c,s,a,y,d,f,p=(n={count:0},r={down:function(n){return function(e){return{count:e.count-n}}}},o=function(e,n){return t("div",null,t("div",{className:"app"},"test scss"),t("h1",null,e.count),t("button",{onclick:function(){return n.down(1)}},"-"))},i=document.body,u=[].map,c=i&&i.children[0]||null,s=c&&function n(e){return{nodeName:e.nodeName.toLowerCase(),attributes:{},children:u.call(e.childNodes,function(e){return 3===e.nodeType?e.nodeValue:n(e)})}}(c),a=[],y=!0,d=m(n),f=function e(r,o,i){for(var n in i)"function"==typeof i[n]?function(e,t){i[e]=function(e){var n=t(e);return"function"==typeof n&&(n=n(N(r,d),i)),n&&n!==(o=N(r,d))&&!n.then&&v(d=b(r,m(o,n),d)),n}}(n,i[n]):e(r.concat(n),o[n]=m(o[n]),i[n]=m(i[n]));return i}([],d,m(r)),v(),f);function g(e){return"function"==typeof e?g(e(d,f)):null!=e?e:""}function h(){l=!l;var e=g(o);for(i&&!l&&(c=function e(n,t,r,o,i){if(o===r);else if(null==r||r.nodeName!==o.nodeName){var l=I(o,i);n.insertBefore(l,t),null!=r&&T(n,t,r),t=l}else if(null==r.nodeName)t.nodeValue=o;else{B(t,r.attributes,o.attributes,i=i||"svg"===o.nodeName);for(var u={},c={},s=[],a=r.children,d=o.children,f=0;f<a.length;f++){s[f]=t.childNodes[f];var p=w(a[f]);null!=p&&(u[p]=[s[f],a[f]])}for(var f=0,h=0;h<d.length;){var p=w(a[f]),v=w(d[h]=g(d[h]));if(c[p])f++;else if(null==v||v!==w(a[f+1]))if(null==v||y)null==p&&(e(t,s[f],a[f],d[h],i),h++),f++;else{var m=u[v]||[];p===v?(e(t,m[0],m[1],d[h],i),f++):m[0]?e(t,t.insertBefore(m[0],s[f]),m[1],d[h],i):e(t,s[f],null,d[h],i),c[v]=d[h],h++}else null==p&&T(t,s[f],a[f]),f++}for(;f<a.length;)null==w(a[f])&&T(t,s[f],a[f]),f++;for(var f in u)c[f]||T(t,u[f][0],u[f][1])}return t}(i,c,s,s=e)),y=!1;a.length;)a.pop()()}function v(){l||(l=!0,setTimeout(h))}function m(e,n){var t={};for(var r in e)t[r]=e[r];for(var r in n)t[r]=n[r];return t}function b(e,n,t){var r={};return e.length?(r[e[0]]=1<e.length?b(e.slice(1),n,t[e[0]]):n,m(t,r)):n}function N(e,n){for(var t=0;t<e.length;)n=n[e[t++]];return n}function w(e){return e?e.key:null}function x(e){return e.currentTarget.events[e.type](e)}function C(e,n,t,r,o){if("key"===n);else if("style"===n)if("string"==typeof t)e.style.cssText=t;else for(var i in"string"==typeof r&&(r=e.style.cssText=""),m(r,t)){var l=null==t||null==t[i]?"":t[i];"-"===i[0]?e.style.setProperty(i,l):e.style[i]=l}else"o"===n[0]&&"n"===n[1]?(n=n.slice(2),e.events?r=r||e.events[n]:e.events={},(e.events[n]=t)?r||e.addEventListener(n,x):e.removeEventListener(n,x)):n in e&&"list"!==n&&"type"!==n&&"draggable"!==n&&"spellcheck"!==n&&"translate"!==n&&!o?e[n]=null==t?"":t:null!=t&&!1!==t&&e.setAttribute(n,t),null!=t&&!1!==t||e.removeAttribute(n)}function I(e,n){var t="string"==typeof e||"number"==typeof e?document.createTextNode(e):(n=n||"svg"===e.nodeName)?document.createElementNS("http://www.w3.org/2000/svg",e.nodeName):document.createElement(e.nodeName),r=e.attributes;if(r){r.oncreate&&a.push(function(){r.oncreate(t)});for(var o=0;o<e.children.length;o++)t.appendChild(I(e.children[o]=g(e.children[o]),n));for(var i in r)C(t,i,r[i],null,n)}return t}function B(e,n,t,r){for(var o in m(n,t))t[o]!==("value"===o||"checked"===o?e[o]:n[o])&&C(e,o,t[o],n[o],r);var i=y?t.oncreate:t.onupdate;i&&a.push(function(){i(e,n)})}function T(e,n,t){function r(){e.removeChild(function e(n,t){var r=t.attributes;if(r){for(var o=0;o<t.children.length;o++)e(n.childNodes[o],t.children[o]);r.ondestroy&&r.ondestroy(n)}return n}(n,t))}var o=t.attributes&&t.attributes.onremove;o?o(n,r):r()}e.main=p,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
